// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@ridebooking.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/ridebooking/driver/availability": {
            "put": {
                "description": "Updates the availability status of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Update driver availability",
                "parameters": [
                    {
                        "description": "Driver availability details",
                        "name": "availability",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.DriverLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/driver/available": {
            "get": {
                "description": "Retrieves a list of all drivers who are currently available",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Get all available drivers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ridebooking_internal_model.DriverLocation"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/driver/location": {
            "put": {
                "description": "Updates the location of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Update driver location",
                "parameters": [
                    {
                        "description": "Driver location details",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.DriverLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/driver/nearby": {
            "get": {
                "description": "Finds available drivers near a specific location",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Get nearby drivers",
                "parameters": [
                    {
                        "type": "number",
                        "description": "X coordinate",
                        "name": "x",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Y coordinate",
                        "name": "y",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ridebooking_internal_model.DriverLocation"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid coordinates",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/trip": {
            "get": {
                "description": "Retrieves a trip by its unique trip ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trips"
                ],
                "summary": "Get trip by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trip ID",
                        "name": "tripId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.Trip"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates trip details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trips"
                ],
                "summary": "Update a trip",
                "parameters": [
                    {
                        "description": "Updated trip data",
                        "name": "trip",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.TripRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a trip with provided trip details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trips"
                ],
                "summary": "Create a new trip",
                "parameters": [
                    {
                        "description": "Trip data",
                        "name": "trip",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.TripRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/trip/driver": {
            "get": {
                "description": "Retrieves all trips associated with a specific driver",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trips"
                ],
                "summary": "Get trips by driver ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver ID",
                        "name": "driverId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ridebooking_internal_model.Trip"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/trip/rider": {
            "get": {
                "description": "Retrieves all trips associated with a specific rider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trips"
                ],
                "summary": "Get trips by rider ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rider ID",
                        "name": "riderId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ridebooking_internal_model.Trip"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/user": {
            "put": {
                "description": "Updates an existing user's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user details",
                "parameters": [
                    {
                        "description": "Updated user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/user/emailId": {
            "get": {
                "description": "Retrieves user details by email ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email ID of the user",
                        "name": "emailId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.User"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user based on email ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email ID",
                        "name": "emailId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ridebooking/user/id": {
            "get": {
                "description": "Retrieves user details by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.User"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates user and returns JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid JSON payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ridebooking_internal_model.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ridebooking_internal_model.DriverLocation": {
            "type": "object",
            "properties": {
                "driverId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/ridebooking_internal_model.Gelocation"
                }
            }
        },
        "ridebooking_internal_model.DriverLocationRequest": {
            "type": "object",
            "properties": {
                "driverId": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/ridebooking_internal_model.Gelocation"
                }
            }
        },
        "ridebooking_internal_model.Gelocation": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "ridebooking_internal_model.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ridebooking_internal_model.Trip": {
            "type": "object",
            "properties": {
                "driverId": {
                    "type": "string"
                },
                "endLocation": {
                    "$ref": "#/definitions/ridebooking_internal_model.Gelocation"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "riderId": {
                    "type": "string"
                },
                "startLocation": {
                    "$ref": "#/definitions/ridebooking_internal_model.Gelocation"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/ridebooking_internal_model.TripStatus"
                },
                "totalDistance": {
                    "type": "number"
                },
                "tripId": {
                    "type": "string"
                }
            }
        },
        "ridebooking_internal_model.TripRequest": {
            "type": "object",
            "properties": {
                "driverId": {
                    "type": "string"
                },
                "endLocation": {
                    "$ref": "#/definitions/ridebooking_internal_model.Gelocation"
                },
                "endTime": {
                    "type": "string"
                },
                "riderId": {
                    "type": "string"
                },
                "startLocation": {
                    "$ref": "#/definitions/ridebooking_internal_model.Gelocation"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/ridebooking_internal_model.TripStatus"
                },
                "totalDistance": {
                    "type": "number"
                },
                "tripId": {
                    "type": "string"
                }
            }
        },
        "ridebooking_internal_model.TripStatus": {
            "type": "string",
            "enum": [
                "pending",
                "accepted",
                "ongoing",
                "cancelled",
                "completed"
            ],
            "x-enum-varnames": [
                "TripPending",
                "TripAccepted",
                "TripOngoing",
                "TripCancelled",
                "TripCompleted"
            ]
        },
        "ridebooking_internal_model.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/ridebooking_internal_model.UserType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "ridebooking_internal_model.UserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/ridebooking_internal_model.UserType"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "ridebooking_internal_model.UserType": {
            "type": "string",
            "enum": [
                "Rider",
                "Driver"
            ],
            "x-enum-varnames": [
                "Rider",
                "Driver"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8090",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Ride Booking API",
	Description:      "This is the user management API for ride booking service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
